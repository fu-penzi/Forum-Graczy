daemon off;
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
	use epoll;
	accept_mutex on;
	worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
	gzip on;
	gzip_comp_level 2;
	gzip_min_length 512;
	gzip_proxied any; # Heroku router sends Via header

	server_tokens off;
	
	log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
	access_log <%= ENV['NGINX_ACCESS_LOG_PATH'] || 'logs/nginx/access.log' %> l2met;
	error_log <%= ENV['NGINX_ERROR_LOG_PATH'] || 'logs/nginx/error.log' %>;


	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	# Must read the body in 5 seconds.
	client_body_timeout <%= ENV['NGINX_CLIENT_BODY_TIMEOUT'] || 5 %>;
	
    proxy_ssl_server_name on;
    resolver 8.8.8.8;
	
	upstream backend {
		server forum-graczy-backend.herokuapp.com:443;
	}
	
	server {
        listen <%= ENV["PORT"] %>;
		server_name _;
		keepalive_timeout 5;
		client_max_body_size <%= ENV['NGINX_CLIENT_MAX_BODY_SIZE'] || 1 %>M;
		
		# add_header Content-Security-Policy "default-src 'self'; font-src *;img-src * data:; script-src *; style-src * 'unsafe-inline'";
		# add_header 'Access-Control-Allow-Origin' https://backend;
        # add_header 'Access-Control-Allow-Credentials' 'true';
		
		root /app/;
		
		location / {
			try_files $uri $uri/ /index.html;
			index  index.html index.htm;
		}
		
		location /user/ {
		}
		
		location /content/ {
		}
		
		location /data/ {
			proxy_pass https://backend/;
            proxy_ssl_name forum-graczy-backend.herokuapp.com;
			proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host forum-graczy-backend.herokuapp.com;
			proxy_pass_header Set-Cookie;
			proxy_cookie_domain $host forum-graczy-backend;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}
	}
}

